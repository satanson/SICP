(define (cube x) (* x x x))

(define (sum-range item a next b)
  (if (> a b)
      0
      (+ (item a)
         (sum-range item (next a) next b)
         )
      )
  )

(define (pi-sum-range n) 
  (define (item k)
    (/  1.0 (* (+ (* 4 k)  1)
             (+ (* 4 k)  3)
             )
        )
    )
  (* 8 (sum-range item 0 (lambda (x) (+ 1 x)) n))
  )

(define (integral f a b dx)
  (define (add-dx x) (+ x dx))
  (* (sum-range f (+ a (/ dx 2.0)) add-dx b)
     dx))

(define (simpson f a b n)
  (define h (/  (- b a) n))
  (define (item k) (f (+ a (* k h))))
  (define (inc2 x) (+ x 2))
  (define max-odd<n (- (* 2 (quotient n 2)) 1))
  (define max-even<n (* 2 (quotient (- n 1) 2)))
  (/ (* h (+ 
           (item 0)
           (item n)
           (* 4 (sum-range  item 1 inc2 max-odd<n))
           (* 2 (sum-range  item 2 inc2 max-even<n))
          )) 3.0)
  )